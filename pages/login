import React, { useState } from 'react';
import axios from 'axios';
import Form from 'react-bootstrap/Form';
import { useNavigate } from 'react-router-dom';
import { FaEyeSlash, FaRegEye } from "react-icons/fa";
import { BASE_URL } from '../services/Api';
import './Login.css'; // Import your custom CSS for additional styling

function Login() {
  const navigate = useNavigate();
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');
  const [showPassword, setShowPassword] = useState(false);

  const togglePasswordVisibility = () => {
    setShowPassword(!showPassword);
  };

  const handleLogin = async (e) => {
    e.preventDefault();
    setError(''); // Clear previous errors
    if (!email || !password) {
      setError('Email and Password are required.');
      return;
    }
    try {
      const response = await axios.post(BASE_URL + 'auth/login', {
        email,
        password,
      });

      if (response.status === 200) {
        const token = response.data.token; 
        localStorage.setItem('token', token);
        navigate('/home');
      } else {
        setError('Invalid credentials. Please try again.');
      }
    } catch (error) {
      console.error('Error:', error);
      setError(error.response?.data?.message || 'An error occurred. Please try again.');
    }
  };

  return (
    <div className='login-container'>
      <div className="login-card">
        <div className="brand-header">
          <h1 className="brand-name">JOSHUA</h1>
        </div>
        <hr className="divider" />
        {error && <p className="error-message">{error}</p>}
        <Form onSubmit={handleLogin}>
          <Form.Group className="mb-3" controlId="formBasicEmail">
            <Form.Label>Email address</Form.Label>
            <Form.Control
              type="email"
              placeholder="Enter email"
              value={email}
              onChange={(e) => setEmail(e.target.value)}
              className="form-input"
              required
            />
          </Form.Group>
          <Form.Group className="mb-3" controlId="formBasicPassword">
            <Form.Label>Password</Form.Label>
            <div className="password-field">
              <Form.Control
                type={showPassword ? 'text' : 'password'}
                placeholder="Password"
                value={password}
                onChange={(e) => setPassword(e.target.value)}
                className="form-input"
                required
              />
              <span className="password-toggle" onClick={togglePasswordVisibility}>
                {showPassword ? <FaRegEye /> : <FaEyeSlash />}
              </span>
            </div>
          </Form.Group>
          <button type="submit" className="btn btn-primary login-button">Login</button>
        </Form>
      </div>
    </div>
  );
}

export default Login;




/* Login.css */

.login-container {
  display: flex;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  background: linear-gradient(135deg, #ece9e6, #ffffff);
}

.login-card {
  background-color: #ffffff;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  padding: 40px;
  width: 100%;
  max-width: 400px;
  text-align: center;
}

.brand-header {
  margin-bottom: 20px;
}

.brand-name {
  font-size: 32px;
  color: #333;
  font-weight: bold;
}

.divider {
  background-color: #333;
  height: 2px;
  margin-bottom: 20px;
}

.error-message {
  color: red;
  margin-bottom: 20px;
}

.form-input {
  border-radius: 20px;
  padding: 10px;
  border: 1px solid #ddd;
  transition: border-color 0.3s;
}

.form-input:focus {
  border-color: #4285f4;
}

.password-field {
  position: relative;
}

.password-toggle {
  position: absolute;
  top: 50%;
  right: 10px;
  transform: translateY(-50%);
  cursor: pointer;
  color: #4285f4;
}

.login-button {
  background: #4285f4;
  border: none;
  border-radius: 20px;
  padding: 10px 20px;
  color: white;
  width: 100%;
  margin-top: 20px;
  transition: background 0.3s;
}

.login-button:hover {
  background: #357ae8;
}
